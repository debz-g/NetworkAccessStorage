// Generated by Dagger (https://dagger.dev).
package dev.redfox.networkaccessstorage.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import dev.redfox.networkaccessstorage.networking.NasApiInterface;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_GetRetrofitServiceFactory implements Factory<NasApiInterface> {
  private final Provider<Retrofit> retrofitProvider;

  public AppModule_GetRetrofitServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public NasApiInterface get() {
    return getRetrofitService(retrofitProvider.get());
  }

  public static AppModule_GetRetrofitServiceFactory create(Provider<Retrofit> retrofitProvider) {
    return new AppModule_GetRetrofitServiceFactory(retrofitProvider);
  }

  public static NasApiInterface getRetrofitService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.getRetrofitService(retrofit));
  }
}
