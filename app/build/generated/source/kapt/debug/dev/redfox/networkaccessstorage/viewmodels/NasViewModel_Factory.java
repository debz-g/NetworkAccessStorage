// Generated by Dagger (https://dagger.dev).
package dev.redfox.networkaccessstorage.viewmodels;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import dev.redfox.networkaccessstorage.networking.NasRepository;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NasViewModel_Factory implements Factory<NasViewModel> {
  private final Provider<NasRepository> nasRepositoryProvider;

  public NasViewModel_Factory(Provider<NasRepository> nasRepositoryProvider) {
    this.nasRepositoryProvider = nasRepositoryProvider;
  }

  @Override
  public NasViewModel get() {
    return newInstance(nasRepositoryProvider.get());
  }

  public static NasViewModel_Factory create(Provider<NasRepository> nasRepositoryProvider) {
    return new NasViewModel_Factory(nasRepositoryProvider);
  }

  public static NasViewModel newInstance(NasRepository nasRepository) {
    return new NasViewModel(nasRepository);
  }
}
